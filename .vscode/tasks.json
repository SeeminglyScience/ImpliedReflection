// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${relativeFile}: the current opened file relative to workspaceRoot
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "runner": "terminal",

    // Start PowerShell
    "windows": {
        "command": "PowerShell.exe"
    },
    "linux": {
        "command": "/usr/bin/powershell"
    },
    "osx": {
        "command": "/usr/local/bin/powershell"
    },

    // The command is a shell script
    "isShellCommand": true,

    "args": [
        "-NoProfile", "-ExecutionPolicy", "Bypass"
    ],

    // Associate with test task runner
    "tasks": [
        {
            "label": "Clean",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build -Task Clean"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build"
            ],
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "BuildHelp",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build -Task BuildDocs"
            ],
            "problemMatcher": []
        },
        {
            "label": "Analyze",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build -Task Analyze"
            ],
            "problemMatcher": []
        },
        {
            "label": "Install",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build -Task Install"
            ],
            "problemMatcher": []
        },
        {
            "label": "Test",
            "type": "shell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "Invoke-Build -Task Test"
            ],
            "problemMatcher": [
                {
                    "owner": "powershell",
                    "fileLocation": [
                        "absolute"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                            "message": 1
                        },
                        {
                            "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                            "file": 1,
                            "line": 2
                        }
                    ]
                }
            ],
            "group": "test"
        }
    ]
}
